var passport = require('passport');
var Auth0Strategy = require('passport-auth0');

//throw error if no secret...
if (!process.env.TC_AUTH0_CLIENT) throw new Error('Auth0 Client not configured. Set `TC_AUTH0_CLIENT` as an environment variable.');
if (!process.env.TC_AUTH0_SECRET) throw new Error('Auth0 Secret not configured. Set `TC_AUTH0_SECRET` as an environment variable.');

var strategy = new Auth0Strategy({  
    domain:       'serenity-tc.auth0.com',
    clientID:     process.env.TC_AUTH0_CLIENT,
    clientSecret: process.env.TC_AUTH0_SECRET,
    callbackURL:  '/_auth_/callback'
  }, function(accessToken, refreshToken, extraParams, profile, done) {
    // accessToken is the token to call Auth0 API (not needed in the most cases)
    // extraParams.id_token has the JSON Web Token
    // profile has all the information from the user
//  console.log('in auth0strat accessToken', accessToken);
  //  console.log('in auth0strat refreshToken', refreshToken);
    //console.log('in auth0strat extraParams', extraParams);
    //console.log('in auth0strat profile', profile);
    //console.log('in auth0strat done', done);

    return done(null, profile, extraParams);
  });

passport.use(strategy);

// This is not a best practice, but we want to keep things simple for now
passport.serializeUser(function(user, done) {
  console.log('in serializeUser');
  done(null, user); 
});

passport.deserializeUser(function(user, done) {
  console.log('in deserializeUser');
  done(null, user);
});

module.exports = strategy; 